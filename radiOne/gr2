BasisDirectory[gr2] = StringDrop[DirectoryName[$Input], -1]
gr2 /: BasisSectors[gr2] := Get[StringJoin[BasisDirectory[gr2], 
    "/BasisSectors[gr2]"]]
gr2 /: CurrentState[gr2] := <|NewDsBasis -> True, GenerateIBP -> True, 
   AnalyzeSectors -> True, FindSymmetries -> False|>
gr2 /: CutDs[gr2] := {0, 0, 0, 0, 1, 1, 1, 1, 0}
gr2 /: Definitions[gr2] := {Hold[MetricTensor[] === d, SetDim[d]], 
   Hold[VecQ[q1], Declare[q1, Vector]], Hold[VecQ[q2], Declare[q2, Vector]], 
   Hold[VecQ[b1], Declare[b1, Vector]], Hold[VecQ[v1], Declare[v1, Vector]], 
   Hold[VecQ[v3], Declare[v3, Vector]], 
   Hold[LiteRed`Private`ExpresionType[b1] === LiteRed`Private`ExpresionType[
      b1], Declare[b1, LiteRed`Private`ExpresionType[b1]]], 
   Hold[LiteRed`Private`ExpresionType[v1] === LiteRed`Private`ExpresionType[
      v1], Declare[v1, LiteRed`Private`ExpresionType[v1]]], 
   Hold[LiteRed`Private`ExpresionType[v3] === LiteRed`Private`ExpresionType[
      v3], Declare[v3, LiteRed`Private`ExpresionType[v3]]], 
   Hold[LiteRed`Private`ExpresionType[w1] === LiteRed`Private`ExpresionType[
      w1], Declare[w1, LiteRed`Private`ExpresionType[w1]]], 
   Hold[LiteRed`Private`ExpresionType[y1] === LiteRed`Private`ExpresionType[
      y1], Declare[y1, LiteRed`Private`ExpresionType[y1]]], 
   Hold[LiteRed`Private`ExpresionType[z1] === LiteRed`Private`ExpresionType[
      z1], Declare[z1, LiteRed`Private`ExpresionType[z1]]], 
   Hold[sp[b1, b1] === w1, sp[b1, b1] = w1], Hold[sp[v1, v1] === z1, 
    sp[v1, v1] = z1], Hold[sp[v3, v3] === 1, sp[v3, v3] = 1], 
   Hold[sp[b1, v1] === 0, sp[b1, v1] = 0], Hold[sp[b1, v3] === 0, 
    sp[b1, v3] = 0], Hold[sp[v1, v3] === y1, sp[v1, v3] = y1]}
gr2 /: Ds[gr2] := {sp[q1, q1], sp[q2, q2], sp[q1, q2], sp[q1, v3], 
   sp[q1, v1], sp[q2, v1], sp[q1, v3] + sp[q2, v3], 
   u + sp[b1, q1] - sp[b1, q2], sp[b1, q1]}
gr2 /: DsBasisQ[gr2] := True
gr2 /: EMs[gr2] := {b1, v1, v3}
gr2 /: ExtMappedSectors[gr2] := {}
gr2 /: ExtSectorsMappings[gr2] := {}
gr2 /: IBP[gr2] := Get[StringJoin[BasisDirectory[gr2], "/IBP[gr2]"]]
gr2 /: Information[gr2] := (If[ValueQ[gr2::usage], 
    Information[gr2, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[gr2] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[gr2, __]]] :> 
           HoldForm[LiteRed`Private`f$[gr2, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[gr2, 
              ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[
                  gr2], HoldPattern[LiteRed`Private`a$_ :> 
                    LiteRed`Private`b$_] /; MatchQ[LiteRed`Private`a$[[1,0]], 
                   LiteRed`Private`x$[[1,0]]]] /. HoldPattern -> 
                 HoldForm]]) & , Appearance -> "Frameless", 
           BaseStyle -> "InformationLink"]}, {1}]], 5], 
     DefaultBaseStyle -> "InfoGrid"]])
gr2 /: jRules[gr2, 0, 0, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jRules[gr2, 0, 0, 1, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jRules[gr2, 0, 1, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jRules[gr2, 0, 1, 1, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jRules[gr2, 1, 0, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jRules[gr2, 1, 0, 1, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jRules[gr2, 1, 1, 0, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jRules[gr2, 1, 1, 0, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jRules[gr2, 1, 1, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jRules[gr2, 1, 1, 1, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jsOrder[gr2] := {"np", "cp", "-ds", "-ns"}
gr2 /: jsOrder[gr2, 0, 0, 0, 0, 1, 1, 1, 1, 0] := 
  {{-1, -1, -1, -1, 1, 1, 1, 1, -1}, {-1, -1, -1, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 0, 0, 1, 0, 0, 1, 1, 1, 0] := 
  {{-1, -1, 1, -1, -1, 1, 1, 1, -1}, {-1, -1, 0, -1, -1, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 0, 1, 1, 1, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 1, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 0, 0, 1, 0, 1, 0, 1, 1, 0] := 
  {{-1, -1, 1, -1, 1, -1, 1, 1, -1}, {-1, -1, 0, -1, 0, -1, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 0, 1, 1, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 1, 0, 0, 0}}
gr2 /: jsOrder[gr2, 0, 0, 1, 0, 1, 1, 0, 1, 0] := 
  {{-1, -1, 1, -1, 1, 1, -1, 1, -1}, {-1, -1, 0, -1, 0, 0, -1, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 0, 1, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 1, 0, 0}}
gr2 /: jsOrder[gr2, 0, 0, 1, 0, 1, 1, 1, 0, 0] := 
  {{-1, -1, 1, -1, 1, 1, 1, -1, -1}, {-1, -1, 0, -1, 0, 0, 0, -1, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0}}
gr2 /: jsOrder[gr2, 0, 0, 1, 0, 1, 1, 1, 1, 0] := 
  {{-1, -1, 1, -1, 1, 1, 1, 1, -1}, {-1, -1, 0, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 1, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 0, 1, 0, 0, 1, 1, 1, 1, 0] := 
  {{-1, 1, -1, -1, 1, 1, 1, 1, -1}, {-1, 0, -1, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 1, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 0, 1, 1, 0, 0, 1, 1, 1, 0] := 
  {{-1, 1, 1, -1, -1, 1, 1, 1, -1}, {-1, 0, 0, -1, -1, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 0, 1, 1, 1, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 1, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 0, 1, 1, 0, 1, 0, 1, 1, 0] := 
  {{-1, 1, 1, -1, 1, -1, 1, 1, -1}, {-1, 0, 0, -1, 0, -1, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 0, 1, 1, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 1, 0, 0, 0}}
gr2 /: jsOrder[gr2, 0, 1, 1, 0, 1, 1, 0, 1, 0] := 
  {{-1, 1, 1, -1, 1, 1, -1, 1, -1}, {-1, 0, 0, -1, 0, 0, -1, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 0, 1, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 1, 0, 0}}
gr2 /: jsOrder[gr2, 0, 1, 1, 0, 1, 1, 1, 0, 0] := 
  {{-1, 1, 1, -1, 1, 1, 1, -1, -1}, {-1, 0, 0, -1, 0, 0, 0, -1, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 0, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0}}
gr2 /: jsOrder[gr2, 0, 1, 1, 0, 1, 1, 1, 1, 0] := 
  {{-1, 1, 1, -1, 1, 1, 1, 1, -1}, {-1, 0, 0, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 1, 0}, {0, -1, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 0, 0, 0, 1, 1, 1, 1, 0] := 
  {{1, -1, -1, -1, 1, 1, 1, 1, -1}, {0, -1, -1, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 1, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 0, 1, 0, 1, 1, 1, 1, 0] := 
  {{1, -1, 1, -1, 1, 1, 1, 1, -1}, {0, -1, 0, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 0, 0, 0, 1, 1, 1, 0] := 
  {{1, 1, -1, -1, -1, 1, 1, 1, -1}, {0, 0, -1, -1, -1, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 0, 1, 1, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 1, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 0, 0, 1, 0, 1, 1, 0] := 
  {{1, 1, -1, -1, 1, -1, 1, 1, -1}, {0, 0, -1, -1, 0, -1, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 0, 1, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 1, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 0, 0, 1, 1, 0, 1, 0] := 
  {{1, 1, -1, -1, 1, 1, -1, 1, -1}, {0, 0, -1, -1, 0, 0, -1, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 0, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 1, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 0, 0, 1, 1, 1, 0, 0] := 
  {{1, 1, -1, -1, 1, 1, 1, -1, -1}, {0, 0, -1, -1, 0, 0, 0, -1, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0}}
gr2 /: jsOrder[gr2, 1, 1, 0, 0, 1, 1, 1, 1, 0] := 
  {{1, 1, -1, -1, 1, 1, 1, 1, -1}, {0, 0, -1, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 1, 0, 0, 1, 1, 1, 0] := 
  {{1, 1, 1, -1, -1, 1, 1, 1, -1}, {0, 0, 0, -1, -1, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 0, 1, 1, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, -1, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 1, 0, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 1, 0, 1, 0, 1, 1, 0] := 
  {{1, 1, 1, -1, 1, -1, 1, 1, -1}, {0, 0, 0, -1, 0, -1, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 0, 1, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, -1, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 1, 0, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 1, 0, 1, 1, 0, 1, 0] := 
  {{1, 1, 1, -1, 1, 1, -1, 1, -1}, {0, 0, 0, -1, 0, 0, -1, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 0, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 1, 0, 0}}
gr2 /: jsOrder[gr2, 1, 1, 1, 0, 1, 1, 1, 0, 0] := 
  {{1, 1, 1, -1, 1, 1, 1, -1, -1}, {0, 0, 0, -1, 0, 0, 0, -1, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 0, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, 0, 0, 1, 0}}
gr2 /: jsOrder[gr2, 1, 1, 1, 0, 1, 1, 1, 1, 0] := 
  {{1, 1, 1, -1, 1, 1, 1, 1, -1}, {0, 0, 0, -1, 0, 0, 0, 0, -1}, 
   {0, 0, 0, 0, 1, 1, 1, 1, 0}, {-1, 0, 0, 0, 0, 0, 0, 0, 0}, 
   {0, -1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, -1, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0, 0, 0}}
gr2 /: jSymmetries[gr2, 0, 0, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jSymmetries[gr2, 0, 0, 1, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jSymmetries[gr2, 0, 1, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jSymmetries[gr2, 0, 1, 1, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jSymmetries[gr2, 1, 1, 0, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jSymmetries[gr2, 1, 1, 0, 0, 1, 1, 1, 1, 0]"]]
gr2 /: jSymmetries[gr2, 1, 1, 1, 0, 1, 1, 1, 1, 0] := 
  Get[StringJoin[BasisDirectory[gr2], 
    "/jSymmetries[gr2, 1, 1, 1, 0, 1, 1, 1, 1, 0]"]]
gr2 /: LI[gr2] := Get[StringJoin[BasisDirectory[gr2], "/LI[gr2]"]]
gr2 /: LMs[gr2] := {q1, q2}
gr2 /: MappedSectors[gr2] := Get[StringJoin[BasisDirectory[gr2], 
    "/MappedSectors[gr2]"]]
gr2 /: MIs[gr2] := Get[StringJoin[BasisDirectory[gr2], "/MIs[gr2]"]]
gr2 /: NDs[gr2] := 9
gr2 /: NonZeroSectors[gr2] := Get[StringJoin[BasisDirectory[gr2], 
    "/NonZeroSectors[gr2]"]]
gr2 /: Parameters[gr2] := {u, w1, y1, z1, d}
gr2 /: PowerShifts[gr2] := {0, 0, 0, 0, 0, 0, 0, 0, 0}
gr2 /: SectorsMappings[gr2] := {js[gr2, 1, 0, 1, 0, 1, 1, 1, 1, 0] -> 
    js[gr2, 0, 1, 1, 0, 1, 1, 1, 1, 0]}
gr2 /: SectorsPattern[gr2] := {_, _, _, 0, _, _, _, _, 0}
gr2 /: SimpleSectors[gr2] := Get[StringJoin[BasisDirectory[gr2], 
    "/SimpleSectors[gr2]"]]
gr2 /: SPs[gr2] := {sp[b1, q1], sp[b1, q2], sp[q1, q1], sp[q1, q2], 
   sp[q1, v1], sp[q1, v3], sp[q2, q2], sp[q2, v1], sp[q2, v3]}
gr2 /: SR[gr2] := Get[StringJoin[BasisDirectory[gr2], "/SR[gr2]"]]
gr2 /: Toj[gr2] := {sp[b1, q1] -> j[gr2, 0, 0, 0, 0, 0, 0, 0, 0, -1], 
   sp[b1, q2] -> u - j[gr2, 0, 0, 0, 0, 0, 0, 0, -1, 0] + 
     j[gr2, 0, 0, 0, 0, 0, 0, 0, 0, -1], sp[q1, q1] -> 
    j[gr2, -1, 0, 0, 0, 0, 0, 0, 0, 0], sp[q1, q2] -> 
    j[gr2, 0, 0, -1, 0, 0, 0, 0, 0, 0], sp[q1, v1] -> 
    j[gr2, 0, 0, 0, 0, -1, 0, 0, 0, 0], sp[q1, v3] -> 
    j[gr2, 0, 0, 0, -1, 0, 0, 0, 0, 0], sp[q2, q2] -> 
    j[gr2, 0, -1, 0, 0, 0, 0, 0, 0, 0], sp[q2, v1] -> 
    j[gr2, 0, 0, 0, 0, 0, -1, 0, 0, 0], sp[q2, v3] -> 
    -j[gr2, 0, 0, 0, -1, 0, 0, 0, 0, 0] + j[gr2, 0, 0, 0, 0, 0, 0, -1, 0, 0]}
gr2 /: UniqueSectors[gr2] := Get[StringJoin[BasisDirectory[gr2], 
    "/UniqueSectors[gr2]"]]
gr2 /: ZerojRule[gr2] := LiteRed`Private`jjj:j[gr2, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 1, 0, 1, 1, 1, 0, 0}, {1, 1, 1, 0, 1, 1, 0, 1, 0}, 
        {0, 1, 0, 0, 1, 1, 1, 1, 0}, {1, 1, 1, 0, 1, 0, 1, 1, 0}, 
        {1, 1, 1, 0, 0, 1, 1, 1, 0}, {1, 0, 0, 0, 1, 1, 1, 1, 0}}]
gr2 /: ZeroSectors[gr2] := Get[StringJoin[BasisDirectory[gr2], 
    "/ZeroSectors[gr2]"]]
gr2 /: SectorsMappings[gr2, LiteRed`Private`ns$:(0 | 1)..] := 
  Cases[SectorsMappings[gr2], HoldPattern[js[gr2, LiteRed`Private`ns$] -> _]]
gr2::usage = "2-loop basis with 3 external momenta.\nUse Information[gr2] to \
get basis summary.\nThis string can be redefined by setting \
gr2::usage=\"\[Ellipsis]\""; Information[gr2, LongForm -> False]; 
LiteRed`Private`CheckDefs[gr2]
BasisDirectory[gr2]
